{'class': [{'class': [],
            'func': [{'args': ['self', 'key', 'PREV', 'NEXT', 'dict_delitem'], 'defaults': [0, 1, <slot wrapper '__delitem__' of 'dict' objects>], 'name': '__delitem__'},
                     {'args': ['self', 'other'], 'defaults': [], 'name': '__eq__'},
                     {'args': ['self'], 'defaults': [], 'name': '__init__'},
                     {'args': ['self'], 'defaults': [], 'name': '__iter__'},
                     {'args': ['self', 'other'], 'defaults': [], 'name': '__ne__'},
                     {'args': ['self'], 'defaults': [], 'name': '__reduce__'},
                     {'args': ['self', '_repr_running'], 'defaults': [{}], 'name': '__repr__'},
                     {'args': ['self'], 'defaults': [], 'name': '__reversed__'},
                     {'args': ['self', 'key', 'value', 'PREV', 'NEXT', 'dict_setitem'], 'defaults': [0, 1, <slot wrapper '__setitem__' of 'dict' objects>], 'name': '__setitem__'},
                     {'args': ['self'], 'defaults': [], 'name': 'clear'},
                     {'args': ['self'], 'defaults': [], 'name': 'copy'},
                     {'args': ['self'], 'defaults': [], 'name': 'items'},
                     {'args': ['self'], 'defaults': [], 'name': 'iteritems'},
                     {'args': ['self'], 'defaults': [], 'name': 'iterkeys'},
                     {'args': ['self'], 'defaults': [], 'name': 'itervalues'},
                     {'args': ['self'], 'defaults': [], 'name': 'keys'},
                     {'args': ['self', 'key', 'default'], 'defaults': [<object object at 0x081414B8>], 'name': 'pop'},
                     {'args': ['self', 'last'], 'defaults': [True], 'name': 'popitem'},
                     {'args': ['self', 'key', 'default'], 'defaults': [None], 'name': 'setdefault'},
                     {'args': ['self'], 'defaults': [], 'name': 'values'},
                     {'args': ['self'], 'defaults': [], 'name': 'viewitems'},
                     {'args': ['self'], 'defaults': [], 'name': 'viewkeys'},
                     {'args': ['self'], 'defaults': [], 'name': 'viewvalues'}],
            'import': [],
            'var': [{'name': '_OrderedDict__marker', 'type': 'object', 'value': <object object at 0x081414B8>},
                    {'name': '_OrderedDict__update', 'type': 'instancemethod', 'value': <unbound method MutableMapping.update>},
                    {'name': '__dict__', 'type': 'getset_descriptor', 'value': <attribute '__dict__' of 'OrderedDict' objects>},
                    {'name': '__doc__', 'type': 'str', 'value': 'Dictionary that remembers insertion order'},
                    {'name': '__module__', 'type': 'str', 'value': 'collections'},
                    {'name': '__weakref__', 'type': 'getset_descriptor', 'value': <attribute '__weakref__' of 'OrderedDict' objects>},
                    {'name': 'fromkeys', 'type': 'classmethod', 'value': <classmethod object at 0x08B046B0>},
                    {'name': 'update', 'type': 'instancemethod', 'value': <unbound method MutableMapping.update>}]},
           {'class': [{'class': [],
                       'func': [{'args': ['self', 'text'], 'defaults': [], 'name': 'AppendText'},
                                {'args': ['self'], 'defaults': [], 'name': 'InitIndex'},
                                {'args': ['self'], 'defaults': [], 'name': 'OnUpdate'},
                                {'args': ['self', 'delay'], 'defaults': [], 'name': 'SetDelay'},
                                {'args': ['self'], 'defaults': [], 'name': 'Start'},
                                {'args': ['self'], 'defaults': [], 'name': 'Stop'},
                                {'args': ['self'], 'defaults': [], 'name': '__del__'},
                                {'args': ['self', 'parent_object'], 'defaults': [], 'name': '__init__'}],
                       'import': [],
                       'var': [{'name': '_SwapTextLine__cur_index', 'type': 'member_descriptor', 'value': <member '_SwapTextLine__cur_index' of 'SwapTextLine' objects>},
                               {'name': '_SwapTextLine__delay_ms', 'type': 'member_descriptor', 'value': <member '_SwapTextLine__delay_ms' of 'SwapTextLine' objects>},
                               {'name': '_SwapTextLine__is_start', 'type': 'member_descriptor', 'value': <member '_SwapTextLine__is_start' of 'SwapTextLine' objects>},
                               {'name': '_SwapTextLine__last_update_time', 'type': 'member_descriptor', 'value': <member '_SwapTextLine__last_update_time' of 'SwapTextLine' objects>},
                               {'name': '_SwapTextLine__text_list', 'type': 'member_descriptor', 'value': <member '_SwapTextLine__text_list' of 'SwapTextLine' objects>},
                               {'name': '_SwapTextLine__text_object', 'type': 'member_descriptor', 'value': <member '_SwapTextLine__text_object' of 'SwapTextLine' objects>},
                               {'name': '__doc__', 'type': 'NoneType', 'value': None},
                               {'name': '__module__', 'type': 'str', 'value': 'uiMiniGameChallenge'},
                               {'name': '__qualname__', 'type': 'str', 'value': 'MiniGameChallengeSubWindowGame.SwapTextLine'},
                               {'name': '__slots__', 'type': 'tuple', 'value': ('__text_object', '__text_list', '__delay_ms', '__cur_index', '__last_update_time', '__is_start')}]},
                      {'class': [],
                       'func': [{'args': ['self'], 'defaults': [], 'name': '__del__'}, {'args': ['self', 'parent_object', 'index', 'x', 'y', 'multiple_number'], 'defaults': [], 'name': '__init__'}],
                       'import': [],
                       'var': [{'name': '_RouletteSlot__IMG_PATH', 'type': 'str', 'value': 'd:/ymir work/ui/minigame/challenge/'},
                               {'name': '_RouletteSlot__base_img_object', 'type': 'member_descriptor', 'value': <member '_RouletteSlot__base_img_object' of 'RouletteSlot' objects>},
                               {'name': '_RouletteSlot__index', 'type': 'member_descriptor', 'value': <member '_RouletteSlot__index' of 'RouletteSlot' objects>},
                               {'name': '_RouletteSlot__multiple_img_object', 'type': 'member_descriptor', 'value': <member '_RouletteSlot__multiple_img_object' of 'RouletteSlot' objects>},
                               {'name': '_RouletteSlot__multiple_number', 'type': 'member_descriptor', 'value': <member '_RouletteSlot__multiple_number' of 'RouletteSlot' objects>},
                               {'name': '_RouletteSlot__x', 'type': 'member_descriptor', 'value': <member '_RouletteSlot__x' of 'RouletteSlot' objects>},
                               {'name': '_RouletteSlot__y', 'type': 'member_descriptor', 'value': <member '_RouletteSlot__y' of 'RouletteSlot' objects>},
                               {'name': '__doc__', 'type': 'NoneType', 'value': None},
                               {'name': '__module__', 'type': 'str', 'value': 'uiMiniGameChallenge'},
                               {'name': '__qualname__', 'type': 'str', 'value': 'MiniGameChallengeSubWindowGame.RouletteSlot'},
                               {'name': '__slots__', 'type': 'tuple', 'value': ('__base_img_object', '__multiple_img_object', '__index', '__x', '__y', '__multiple_number')}]}],
            'func': [{'args': ['self'], 'defaults': [], 'name': 'Close'},
                     {'args': ['self'], 'defaults': [], 'name': 'Destroy'},
                     {'args': ['self', 'type', 'data'], 'defaults': [], 'name': 'GameProcess'},
                     {'args': ['self'], 'defaults': [], 'name': 'Hide'},
                     {'args': ['self'], 'defaults': [], 'name': 'OnUpdate'},
                     {'args': ['self'], 'defaults': [], 'name': 'Show'},
                     {'args': ['self'], 'defaults': [], 'name': '__ChallengeQuestionDlgCancel'},
                     {'args': ['self'], 'defaults': [], 'name': '__ChallengeScissorsRockPaper'},
                     {'args': ['self'], 'defaults': [], 'name': '__ClickBettingDoubleNextButton'},
                     {'args': ['self'], 'defaults': [], 'name': '__ClickBettingDoublePrevButton'},
                     {'args': ['self'], 'defaults': [], 'name': '__ClickBettingNextButton'},
                     {'args': ['self'], 'defaults': [], 'name': '__ClickBettingPrevButton'},
                     {'args': ['self'], 'defaults': [], 'name': '__ClickChallengeButton'},
                     {'args': ['self', 'is_skip_challenge_question_dlg'], 'defaults': [], 'name': '__ClickCheckButton'},
                     {'args': ['self'], 'defaults': [], 'name': '__InitBetting'},
                     {'args': ['self'], 'defaults': [], 'name': '__InitScissorsRockPaper'},
                     {'args': ['self'], 'defaults': [], 'name': '__InitSwapText'},
                     {'args': ['self'], 'defaults': [], 'name': '__LoadWindow'},
                     {'args': ['self', 'is_lock'], 'defaults': [], 'name': '__MiniGameChallengeLock'},
                     {'args': ['self', 'cur_time', 'pivot_time'], 'defaults': [], 'name': '__MoveNext'},
                     {'args': ['self', 'click_key'], 'defaults': [], 'name': '__OnClickScissorsRockPaperButton'},
                     {'args': ['self'], 'defaults': [], 'name': '__OpenChallengeQuestionDlg'},
                     {'args': ['self'], 'defaults': [], 'name': '__RouletteIndexGenerator'},
                     {'args': ['self'], 'defaults': [], 'name': '__RouletteInitialize'},
                     {'args': ['self'], 'defaults': [], 'name': '__RouletteUpdate'},
                     {'args': ['self', 'cur_time'], 'defaults': [], 'name': '__RouletteUpdateAfterRequest'},
                     {'args': ['self', 'cur_time'], 'defaults': [], 'name': '__RouletteUpdateBeforeRequest'},
                     {'args': ['self', 'result', 'computer_scissors_rock_paper'], 'defaults': [], 'name': '__ScissorsRockPaperResultPacketProcess'},
                     {'args': ['self'], 'defaults': [], 'name': '__SendMiniGameChallengeScissorsRockPaper'},
                     {'args': ['self', 'is_lock'], 'defaults': [], 'name': '__SetBettingButtonLock'},
                     {'args': ['self', 'count'], 'defaults': [], 'name': '__SetBettingCount'},
                     {'args': ['self', 'is_lock'], 'defaults': [], 'name': '__SetChallengeButtonLock'},
                     {'args': ['self', 'type', 'data'], 'defaults': [], 'name': '__SetEvent'},
                     {'args': ['self', 'is_lock'], 'defaults': [], 'name': '__SetScissorsRockPaperButtonLock'},
                     {'args': ['self', 'input_computer_scissors_rock_paper'], 'defaults': [], 'name': '__ShowComputerScissorsRockPaperImage'},
                     {'args': ['self'], 'defaults': [], 'name': '__SpinEnd'},
                     {'args': ['self', 'index'], 'defaults': [], 'name': '__SpinFix'},
                     {'args': ['self'], 'defaults': [], 'name': '__StartSpin'},
                     {'args': ['self'], 'defaults': [], 'name': '__UpdateEvent'},
                     {'args': ['self'], 'defaults': [], 'name': '__UpdateTooltip'},
                     {'args': ['self'], 'defaults': [], 'name': '__del__'},
                     {'args': ['self', 'control_window', 'parent_window'], 'defaults': [], 'name': '__init__'}],
            'import': [],
            'var': [{'name': '_MiniGameChallengeSubWindowGame__BETTING_COUNT_DEFAULT', 'type': 'int', 'value': 1},
                    {'name': '_MiniGameChallengeSubWindowGame__BETTING_COUNT_MAX', 'type': 'int', 'value': 40},
                    {'name': '_MiniGameChallengeSubWindowGame__BETTING_COUNT_MIN', 'type': 'int', 'value': 1},
                    {'name': '_MiniGameChallengeSubWindowGame__BETTING_DOUBLE_NEXT_COUNT', 'type': 'int', 'value': 10},
                    {'name': '_MiniGameChallengeSubWindowGame__BETTING_DOUBLE_PREV_COUNT', 'type': 'int', 'value': -10},
                    {'name': '_MiniGameChallengeSubWindowGame__BETTING_NEXT_COUNT', 'type': 'int', 'value': 1},
                    {'name': '_MiniGameChallengeSubWindowGame__BETTING_PREV_COUNT', 'type': 'int', 'value': -1},
                    {'name': '_MiniGameChallengeSubWindowGame__CHALLENGE_PAPER', 'type': 'int', 'value': 2},
                    {'name': '_MiniGameChallengeSubWindowGame__CHALLENGE_RESULT_DRAW', 'type': 'int', 'value': 2},
                    {'name': '_MiniGameChallengeSubWindowGame__CHALLENGE_RESULT_LOSE', 'type': 'int', 'value': 1},
                    {'name': '_MiniGameChallengeSubWindowGame__CHALLENGE_RESULT_MAX', 'type': 'int', 'value': 3},
                    {'name': '_MiniGameChallengeSubWindowGame__CHALLENGE_RESULT_WIN', 'type': 'int', 'value': 0},
                    {'name': '_MiniGameChallengeSubWindowGame__CHALLENGE_ROCK', 'type': 'int', 'value': 1},
                    {'name': '_MiniGameChallengeSubWindowGame__CHALLENGE_SCISSORS', 'type': 'int', 'value': 0},
                    {'name': '_MiniGameChallengeSubWindowGame__CHALLENGE_SCISSORS_ROCK_PAPER_MAX', 'type': 'int', 'value': 3},
                    {'name': '_MiniGameChallengeSubWindowGame__CHALLENGE_TICKET_COUNT', 'type': 'int', 'value': 5},
                    {'name': '_MiniGameChallengeSubWindowGame__CHALLENGE_TICKET_ITEM_VNUM', 'type': 'int', 'value': 70315},
                    {'name': '_MiniGameChallengeSubWindowGame__CHALLENGE_YANG', 'type': 'int', 'value': 50000},
                    {'name': '_MiniGameChallengeSubWindowGame__EVENT_DEQUE_DATA_SIZE', 'type': 'int', 'value': 2},
                    {'name': '_MiniGameChallengeSubWindowGame__EVENT_TYPE_CHALLENGE_LOCK', 'type': 'int', 'value': 9},
                    {'name': '_MiniGameChallengeSubWindowGame__EVENT_TYPE_DELAY', 'type': 'int', 'value': 1},
                    {'name': '_MiniGameChallengeSubWindowGame__EVENT_TYPE_HIDE_ALL_SWAP_TEXT', 'type': 'int', 'value': 7},
                    {'name': '_MiniGameChallengeSubWindowGame__EVENT_TYPE_HIDE_COMPUTER_SCISSORS_ROCK_PAPER', 'type': 'int', 'value': 5},
                    {'name': '_MiniGameChallengeSubWindowGame__EVENT_TYPE_INIT_SCISSORS_ROCK_PAPER', 'type': 'int', 'value': 2},
                    {'name': '_MiniGameChallengeSubWindowGame__EVENT_TYPE_INIT_SWAP_TEXT', 'type': 'int', 'value': 3},
                    {'name': '_MiniGameChallengeSubWindowGame__EVENT_TYPE_INSERT_DELAY', 'type': 'int', 'value': 0},
                    {'name': '_MiniGameChallengeSubWindowGame__EVENT_TYPE_SHOW_COMPUTER_SCISSORS_ROCK_PAPER', 'type': 'int', 'value': 4},
                    {'name': '_MiniGameChallengeSubWindowGame__EVENT_TYPE_SHOW_SWAP_TEXT', 'type': 'int', 'value': 6},
                    {'name': '_MiniGameChallengeSubWindowGame__EVENT_TYPE_START_SPIN', 'type': 'int', 'value': 8},
                    {'name': '_MiniGameChallengeSubWindowGame__ROULETTE_ADJUST_DISTANCE', 'type': 'int', 'value': 10},
                    {'name': '_MiniGameChallengeSubWindowGame__ROULETTE_INDEX_MAX', 'type': 'int', 'value': 16},
                    {'name': '_MiniGameChallengeSubWindowGame__ROULETTE_RESPONSE_TIME_OUT', 'type': 'int', 'value': 10000},
                    {'name': '_MiniGameChallengeSubWindowGame__SWAP_TEXT_INDEX_CHALLENGE', 'type': 'int', 'value': 1},
                    {'name': '_MiniGameChallengeSubWindowGame__SWAP_TEXT_INDEX_DRAW', 'type': 'int', 'value': 6},
                    {'name': '_MiniGameChallengeSubWindowGame__SWAP_TEXT_INDEX_LOSE_DOWN', 'type': 'int', 'value': 5},
                    {'name': '_MiniGameChallengeSubWindowGame__SWAP_TEXT_INDEX_LOSE_UP', 'type': 'int', 'value': 4},
                    {'name': '_MiniGameChallengeSubWindowGame__SWAP_TEXT_INDEX_WAIT', 'type': 'int', 'value': 0},
                    {'name': '_MiniGameChallengeSubWindowGame__SWAP_TEXT_INDEX_WIN_DOWN', 'type': 'int', 'value': 3},
                    {'name': '_MiniGameChallengeSubWindowGame__SWAP_TEXT_INDEX_WIN_UP', 'type': 'int', 'value': 2},
                    {'name': '_MiniGameChallengeSubWindowGame__betting_count', 'type': 'member_descriptor', 'value': <member '_MiniGameChallengeSubWindowGame__betting_count' of 'MiniGameChallengeSubWindowGame' objects>},
                    {'name': '_MiniGameChallengeSubWindowGame__betting_count_max_button', 'type': 'member_descriptor', 'value': <member '_MiniGameChallengeSubWindowGame__betting_count_max_button' of 'MiniGameChallengeSubWindowGame' objects>},
                    {'name': '_MiniGameChallengeSubWindowGame__betting_count_min_button', 'type': 'member_descriptor', 'value': <member '_MiniGameChallengeSubWindowGame__betting_count_min_button' of 'MiniGameChallengeSubWindowGame' objects>},
                    {'name': '_MiniGameChallengeSubWindowGame__betting_count_next_button', 'type': 'member_descriptor', 'value': <member '_MiniGameChallengeSubWindowGame__betting_count_next_button' of 'MiniGameChallengeSubWindowGame' objects>},
                    {'name': '_MiniGameChallengeSubWindowGame__betting_count_prev_button', 'type': 'member_descriptor', 'value': <member '_MiniGameChallengeSubWindowGame__betting_count_prev_button' of 'MiniGameChallengeSubWindowGame' objects>},
                    {'name': '_MiniGameChallengeSubWindowGame__betting_count_text', 'type': 'member_descriptor', 'value': <member '_MiniGameChallengeSubWindowGame__betting_count_text' of 'MiniGameChallengeSubWindowGame' objects>},
                    {'name': '_MiniGameChallengeSubWindowGame__challenge_button', 'type': 'member_descriptor', 'value': <member '_MiniGameChallengeSubWindowGame__challenge_button' of 'MiniGameChallengeSubWindowGame' objects>},
                    {'name': '_MiniGameChallengeSubWindowGame__challenge_question_dlg', 'type': 'member_descriptor', 'value': <member '_MiniGameChallengeSubWindowGame__challenge_question_dlg' of 'MiniGameChallengeSubWindowGame' objects>},
                    {'name': '_MiniGameChallengeSubWindowGame__challenge_question_dlg_skip_button', 'type': 'member_descriptor', 'value': <member '_MiniGameChallengeSubWindowGame__challenge_question_dlg_skip_button' of 'MiniGameChallengeSubWindowGame' objects>},
                    {'name': '_MiniGameChallengeSubWindowGame__challenge_question_tooptip', 'type': 'member_descriptor', 'value': <member '_MiniGameChallengeSubWindowGame__challenge_question_tooptip' of 'MiniGameChallengeSubWindowGame' objects>},
                    {'name': '_MiniGameChallengeSubWindowGame__challenge_ticket_text', 'type': 'member_descriptor', 'value': <member '_MiniGameChallengeSubWindowGame__challenge_ticket_text' of 'MiniGameChallengeSubWindowGame' objects>},
                    {'name': '_MiniGameChallengeSubWindowGame__challenge_yang_text', 'type': 'member_descriptor', 'value': <member '_MiniGameChallengeSubWindowGame__challenge_yang_text' of 'MiniGameChallengeSubWindowGame' objects>},
                    {'name': '_MiniGameChallengeSubWindowGame__com_scissors_rock_paper_img_dict', 'type': 'member_descriptor', 'value': <member '_MiniGameChallengeSubWindowGame__com_scissors_rock_paper_img_dict' of 'MiniGameChallengeSubWindowGame' objects>},
                    {'name': '_MiniGameChallengeSubWindowGame__control_window', 'type': 'member_descriptor', 'value': <member '_MiniGameChallengeSubWindowGame__control_window' of 'MiniGameChallengeSubWindowGame' objects>},
                    {'name': '_MiniGameChallengeSubWindowGame__event_deque', 'type': 'member_descriptor', 'value': <member '_MiniGameChallengeSubWindowGame__event_deque' of 'MiniGameChallengeSubWindowGame' objects>},
                    {'name': '_MiniGameChallengeSubWindowGame__is_behavior_lock', 'type': 'member_descriptor', 'value': <member '_MiniGameChallengeSubWindowGame__is_behavior_lock' of 'MiniGameChallengeSubWindowGame' objects>},
                    {'name': '_MiniGameChallengeSubWindowGame__is_betting_button_lock', 'type': 'member_descriptor', 'value': <member '_MiniGameChallengeSubWindowGame__is_betting_button_lock' of 'MiniGameChallengeSubWindowGame' objects>},
                    {'name': '_MiniGameChallengeSubWindowGame__is_challenge_button_lock', 'type': 'member_descriptor', 'value': <member '_MiniGameChallengeSubWindowGame__is_challenge_button_lock' of 'MiniGameChallengeSubWindowGame' objects>},
                    {'name': '_MiniGameChallengeSubWindowGame__is_loaded', 'type': 'member_descriptor', 'value': <member '_MiniGameChallengeSubWindowGame__is_loaded' of 'MiniGameChallengeSubWindowGame' objects>},
                    {'name': '_MiniGameChallengeSubWindowGame__is_roulette_result_request', 'type': 'member_descriptor', 'value': <member '_MiniGameChallengeSubWindowGame__is_roulette_result_request' of 'MiniGameChallengeSubWindowGame' objects>},
                    {'name': '_MiniGameChallengeSubWindowGame__is_roulette_spin', 'type': 'member_descriptor', 'value': <member '_MiniGameChallengeSubWindowGame__is_roulette_spin' of 'MiniGameChallengeSubWindowGame' objects>},
                    {'name': '_MiniGameChallengeSubWindowGame__is_scissors_rock_paper_button_lock', 'type': 'member_descriptor', 'value': <member '_MiniGameChallengeSubWindowGame__is_scissors_rock_paper_button_lock' of 'MiniGameChallengeSubWindowGame' objects>},
                    {'name': '_MiniGameChallengeSubWindowGame__is_skip_challenge_question_dlg', 'type': 'member_descriptor', 'value': <member '_MiniGameChallengeSubWindowGame__is_skip_challenge_question_dlg' of 'MiniGameChallengeSubWindowGame' objects>},
                    {'name': '_MiniGameChallengeSubWindowGame__pc_scissors_rock_paper_button_dict', 'type': 'member_descriptor', 'value': <member '_MiniGameChallengeSubWindowGame__pc_scissors_rock_paper_button_dict' of 'MiniGameChallengeSubWindowGame' objects>},
                    {'name': '_MiniGameChallengeSubWindowGame__roulette_cur_index', 'type': 'member_descriptor', 'value': <member '_MiniGameChallengeSubWindowGame__roulette_cur_index' of 'MiniGameChallengeSubWindowGame' objects>},
                    {'name': '_MiniGameChallengeSubWindowGame__roulette_effect_img', 'type': 'member_descriptor', 'value': <member '_MiniGameChallengeSubWindowGame__roulette_effect_img' of 'MiniGameChallengeSubWindowGame' objects>},
                    {'name': '_MiniGameChallengeSubWindowGame__roulette_index_generator', 'type': 'member_descriptor', 'value': <member '_MiniGameChallengeSubWindowGame__roulette_index_generator' of 'MiniGameChallengeSubWindowGame' objects>},
                    {'name': '_MiniGameChallengeSubWindowGame__roulette_move_time', 'type': 'member_descriptor', 'value': <member '_MiniGameChallengeSubWindowGame__roulette_move_time' of 'MiniGameChallengeSubWindowGame' objects>},
                    {'name': '_MiniGameChallengeSubWindowGame__roulette_multiple_tuple', 'type': 'tuple', 'value': (10, 1, 5, 2, 7, 2, 3, 1, 10, 2, 5, 3, 7, 1, 5, 3)},
                    {'name': '_MiniGameChallengeSubWindowGame__roulette_once', 'type': 'member_descriptor', 'value': <member '_MiniGameChallengeSubWindowGame__roulette_once' of 'MiniGameChallengeSubWindowGame' objects>},
                    {'name': '_MiniGameChallengeSubWindowGame__roulette_pos_tuple', 'type': 'tuple', 'value': ((0, 0), (60, 0), (120, 0), (180, 0), (240, 0), (240, 60), (240, 120), (240, 180), (240, 240), (180, 240), (120, 240), (60, 240), (0, 240), (0, 180), (0, 120), (0, 60))},
                    {'name': '_MiniGameChallengeSubWindowGame__roulette_request_time', 'type': 'member_descriptor', 'value': <member '_MiniGameChallengeSubWindowGame__roulette_request_time' of 'MiniGameChallengeSubWindowGame' objects>},
                    {'name': '_MiniGameChallengeSubWindowGame__roulette_result_index', 'type': 'member_descriptor', 'value': <member '_MiniGameChallengeSubWindowGame__roulette_result_index' of 'MiniGameChallengeSubWindowGame' objects>},
                    {'name': '_MiniGameChallengeSubWindowGame__roulette_slot_tuple', 'type': 'member_descriptor', 'value': <member '_MiniGameChallengeSubWindowGame__roulette_slot_tuple' of 'MiniGameChallengeSubWindowGame' objects>},
                    {'name': '_MiniGameChallengeSubWindowGame__roulette_spin_count_before_request', 'type': 'tuple', 'value': ((20, 5), (20, 15, 5))},
                    {'name': '_MiniGameChallengeSubWindowGame__roulette_spin_data', 'type': 'member_descriptor', 'value': <member '_MiniGameChallengeSubWindowGame__roulette_spin_data' of 'MiniGameChallengeSubWindowGame' objects>},
                    {'name': '_MiniGameChallengeSubWindowGame__roulette_spin_time_after_request_beginning', 'type': 'tuple', 'value': (60, 120)},
                    {'name': '_MiniGameChallengeSubWindowGame__roulette_spin_time_after_request_last', 'type': 'tuple', 'value': (400, 600)},
                    {'name': '_MiniGameChallengeSubWindowGame__roulette_spin_time_after_request_middle', 'type': 'tuple', 'value': ((160, 200, 240, 280, 320, 340, 350, 360, 370, 380), (160, 200, 240, 280, 320, 340, 340, 340, 340, 340))},
                    {'name': '_MiniGameChallengeSubWindowGame__roulette_spin_time_before_request', 'type': 'tuple', 'value': ((40, 60), (20, 40, 60))},
                    {'name': '_MiniGameChallengeSubWindowGame__roulette_total_gap', 'type': 'member_descriptor', 'value': <member '_MiniGameChallengeSubWindowGame__roulette_total_gap' of 'MiniGameChallengeSubWindowGame' objects>},
                    {'name': '_MiniGameChallengeSubWindowGame__roulette_update_gap', 'type': 'member_descriptor', 'value': <member '_MiniGameChallengeSubWindowGame__roulette_update_gap' of 'MiniGameChallengeSubWindowGame' objects>},
                    {'name': '_MiniGameChallengeSubWindowGame__roulette_update_time', 'type': 'member_descriptor', 'value': <member '_MiniGameChallengeSubWindowGame__roulette_update_time' of 'MiniGameChallengeSubWindowGame' objects>},
                    {'name': '_MiniGameChallengeSubWindowGame__roulette_window', 'type': 'member_descriptor', 'value': <member '_MiniGameChallengeSubWindowGame__roulette_window' of 'MiniGameChallengeSubWindowGame' objects>},
                    {'name': '_MiniGameChallengeSubWindowGame__select_scissors_rock_paper', 'type': 'member_descriptor', 'value': <member '_MiniGameChallengeSubWindowGame__select_scissors_rock_paper' of 'MiniGameChallengeSubWindowGame' objects>},
                    {'name': '_MiniGameChallengeSubWindowGame__swap_text_dict', 'type': 'member_descriptor', 'value': <member '_MiniGameChallengeSubWindowGame__swap_text_dict' of 'MiniGameChallengeSubWindowGame' objects>},
                    {'name': '__doc__', 'type': 'NoneType', 'value': None},
                    {'name': '__module__', 'type': 'str', 'value': 'uiMiniGameChallenge'},
                    {'name': '__qualname__', 'type': 'str', 'value': 'MiniGameChallengeSubWindowGame'},
                    {'name': '__slots__',
                     'type': 'tuple',
                     'value': ('__control_window',
                               '__is_loaded',
                               '__pc_scissors_rock_paper_button_dict',
                               '__com_scissors_rock_paper_img_dict',
                               '__challenge_button',
                               '__challenge_ticket_text',
                               '__challenge_yang_text',
                               '__betting_count_text',
                               '__betting_count_min_button',
                               '__betting_count_max_button',
                               '__betting_count_prev_button',
                               '__betting_count_next_button',
                               '__challenge_question_dlg_skip_button',
                               '__challenge_question_tooptip',
                               '__roulette_window',
                               '__roulette_effect_img',
                               '__roulette_slot_tuple',
                               '__roulette_index_generator',
                               '__roulette_cur_index',
                               '__roulette_update_gap',
                               '__roulette_update_time',
                               '__roulette_spin_data',
                               '__roulette_once',
                               '__roulette_move_time',
                               '__roulette_total_gap',
                               '__roulette_request_time',
                               '__is_roulette_result_request',
                               '__roulette_result_index',
                               '__is_roulette_spin',
                               '__event_deque',
                               '__swap_text_dict',
                               '__challenge_question_dlg',
                               '__select_scissors_rock_paper',
                               '__betting_count',
                               '__is_behavior_lock',
                               '__is_scissors_rock_paper_button_lock',
                               '__is_challenge_button_lock',
                               '__is_betting_button_lock',
                               '__is_skip_challenge_question_dlg')}]},
           {'class': [],
            'func': [{'args': ['bad-module'], 'defaults': ['bad-module'], 'name': '__new__'}],
            'import': [],
            'var': [{'name': '__copy__', 'type': 'method_descriptor', 'value': <method '__copy__' of 'collections.deque' objects>},
                    {'name': '__delitem__', 'type': 'wrapper_descriptor', 'value': <slot wrapper '__delitem__' of 'collections.deque' objects>},
                    {'name': '__doc__', 'type': 'str', 'value': 'deque(iterable[, maxlen]) --> deque object\n\nBuild an ordered collection with optimized access from its endpoints.'},
                    {'name': '__eq__', 'type': 'wrapper_descriptor', 'value': <slot wrapper '__eq__' of 'collections.deque' objects>},
                    {'name': '__ge__', 'type': 'wrapper_descriptor', 'value': <slot wrapper '__ge__' of 'collections.deque' objects>},
                    {'name': '__getattribute__', 'type': 'wrapper_descriptor', 'value': <slot wrapper '__getattribute__' of 'collections.deque' objects>},
                    {'name': '__getitem__', 'type': 'wrapper_descriptor', 'value': <slot wrapper '__getitem__' of 'collections.deque' objects>},
                    {'name': '__gt__', 'type': 'wrapper_descriptor', 'value': <slot wrapper '__gt__' of 'collections.deque' objects>},
                    {'name': '__hash__', 'type': 'NoneType', 'value': None},
                    {'name': '__iadd__', 'type': 'wrapper_descriptor', 'value': <slot wrapper '__iadd__' of 'collections.deque' objects>},
                    {'name': '__init__', 'type': 'wrapper_descriptor', 'value': <slot wrapper '__init__' of 'collections.deque' objects>},
                    {'name': '__iter__', 'type': 'wrapper_descriptor', 'value': <slot wrapper '__iter__' of 'collections.deque' objects>},
                    {'name': '__le__', 'type': 'wrapper_descriptor', 'value': <slot wrapper '__le__' of 'collections.deque' objects>},
                    {'name': '__len__', 'type': 'wrapper_descriptor', 'value': <slot wrapper '__len__' of 'collections.deque' objects>},
                    {'name': '__lt__', 'type': 'wrapper_descriptor', 'value': <slot wrapper '__lt__' of 'collections.deque' objects>},
                    {'name': '__ne__', 'type': 'wrapper_descriptor', 'value': <slot wrapper '__ne__' of 'collections.deque' objects>},
                    {'name': '__reduce__', 'type': 'method_descriptor', 'value': <method '__reduce__' of 'collections.deque' objects>},
                    {'name': '__repr__', 'type': 'wrapper_descriptor', 'value': <slot wrapper '__repr__' of 'collections.deque' objects>},
                    {'name': '__reversed__', 'type': 'method_descriptor', 'value': <method '__reversed__' of 'collections.deque' objects>},
                    {'name': '__setitem__', 'type': 'wrapper_descriptor', 'value': <slot wrapper '__setitem__' of 'collections.deque' objects>},
                    {'name': 'append', 'type': 'method_descriptor', 'value': <method 'append' of 'collections.deque' objects>},
                    {'name': 'appendleft', 'type': 'method_descriptor', 'value': <method 'appendleft' of 'collections.deque' objects>},
                    {'name': 'clear', 'type': 'method_descriptor', 'value': <method 'clear' of 'collections.deque' objects>},
                    {'name': 'count', 'type': 'method_descriptor', 'value': <method 'count' of 'collections.deque' objects>},
                    {'name': 'extend', 'type': 'method_descriptor', 'value': <method 'extend' of 'collections.deque' objects>},
                    {'name': 'extendleft', 'type': 'method_descriptor', 'value': <method 'extendleft' of 'collections.deque' objects>},
                    {'name': 'maxlen', 'type': 'getset_descriptor', 'value': <attribute 'maxlen' of 'collections.deque' objects>},
                    {'name': 'pop', 'type': 'method_descriptor', 'value': <method 'pop' of 'collections.deque' objects>},
                    {'name': 'popleft', 'type': 'method_descriptor', 'value': <method 'popleft' of 'collections.deque' objects>},
                    {'name': 'remove', 'type': 'method_descriptor', 'value': <method 'remove' of 'collections.deque' objects>},
                    {'name': 'reverse', 'type': 'method_descriptor', 'value': <method 'reverse' of 'collections.deque' objects>},
                    {'name': 'rotate', 'type': 'method_descriptor', 'value': <method 'rotate' of 'collections.deque' objects>}]},
           {'class': [{'class': [],
                       'func': [{'args': ['self'], 'defaults': [], 'name': 'OnRender'}, {'args': ['self', 'index'], 'defaults': [], 'name': 'SetIndex'}, {'args': ['self'], 'defaults': [], 'name': '__del__'}, {'args': ['self'], 'defaults': [], 'name': '__init__'}],
                       'import': [],
                       'var': [{'name': '_DescriptionBox__desc_index', 'type': 'member_descriptor', 'value': <member '_DescriptionBox__desc_index' of 'DescriptionBox' objects>},
                               {'name': '__doc__', 'type': 'NoneType', 'value': None},
                               {'name': '__module__', 'type': 'str', 'value': 'uiMiniGameChallenge'},
                               {'name': '__qualname__', 'type': 'str', 'value': 'MiniGameChallengeSubWindowDesc.DescriptionBox'},
                               {'name': '__slots__', 'type': 'tuple', 'value': ('__desc_index',)}]}],
            'func': [{'args': ['self'], 'defaults': [], 'name': 'Close'},
                     {'args': ['self'], 'defaults': [], 'name': 'Destroy'},
                     {'args': ['self'], 'defaults': [], 'name': 'Hide'},
                     {'args': ['self'], 'defaults': [], 'name': 'OnUpdate'},
                     {'args': ['self'], 'defaults': [], 'name': 'Show'},
                     {'args': ['self'], 'defaults': [], 'name': '__LoadWindow'},
                     {'args': ['self'], 'defaults': [], 'name': '__NextDescriptionPage'},
                     {'args': ['self'], 'defaults': [], 'name': '__PrevDescriptionPage'},
                     {'args': ['self'], 'defaults': [], 'name': '__del__'},
                     {'args': ['self', 'control_window', 'parent_window'], 'defaults': [], 'name': '__init__'}],
            'import': [],
            'var': [{'name': '_MiniGameChallengeSubWindowDesc__DEFAULT_DESC_Y', 'type': 'int', 'value': 7},
                    {'name': '_MiniGameChallengeSubWindowDesc__DESC_WIDTH_COUNT', 'type': 'int', 'value': 68},
                    {'name': '_MiniGameChallengeSubWindowDesc__VISIBLE_LINE_COUNT', 'type': 'int', 'value': 17},
                    {'name': '_MiniGameChallengeSubWindowDesc__control_window', 'type': 'member_descriptor', 'value': <member '_MiniGameChallengeSubWindowDesc__control_window' of 'MiniGameChallengeSubWindowDesc' objects>},
                    {'name': '_MiniGameChallengeSubWindowDesc__desc_board', 'type': 'member_descriptor', 'value': <member '_MiniGameChallengeSubWindowDesc__desc_board' of 'MiniGameChallengeSubWindowDesc' objects>},
                    {'name': '_MiniGameChallengeSubWindowDesc__desc_index', 'type': 'member_descriptor', 'value': <member '_MiniGameChallengeSubWindowDesc__desc_index' of 'MiniGameChallengeSubWindowDesc' objects>},
                    {'name': '_MiniGameChallengeSubWindowDesc__desc_y', 'type': 'member_descriptor', 'value': <member '_MiniGameChallengeSubWindowDesc__desc_y' of 'MiniGameChallengeSubWindowDesc' objects>},
                    {'name': '_MiniGameChallengeSubWindowDesc__description_box', 'type': 'member_descriptor', 'value': <member '_MiniGameChallengeSubWindowDesc__description_box' of 'MiniGameChallengeSubWindowDesc' objects>},
                    {'name': '_MiniGameChallengeSubWindowDesc__is_loaded', 'type': 'member_descriptor', 'value': <member '_MiniGameChallengeSubWindowDesc__is_loaded' of 'MiniGameChallengeSubWindowDesc' objects>},
                    {'name': '__doc__', 'type': 'NoneType', 'value': None},
                    {'name': '__module__', 'type': 'str', 'value': 'uiMiniGameChallenge'},
                    {'name': '__qualname__', 'type': 'str', 'value': 'MiniGameChallengeSubWindowDesc'},
                    {'name': '__slots__', 'type': 'tuple', 'value': ('__control_window', '__is_loaded', '__desc_board', '__description_box', '__desc_index', '__desc_y')}]},
           {'class': [],
            'func': [{'args': ['self', 'is_force', 'is_send_packet'], 'defaults': [False, True], 'name': 'Close'},
                     {'args': ['self'], 'defaults': [], 'name': 'Destroy'},
                     {'args': ['self', 'type', 'data'], 'defaults': [None], 'name': 'MiniGameChallengeProcess'},
                     {'args': ['self'], 'defaults': [], 'name': 'OnMouseWheelButtonDown'},
                     {'args': ['self'], 'defaults': [], 'name': 'OnMouseWheelButtonUp'},
                     {'args': ['self'], 'defaults': [], 'name': 'OnPressEscapeKey'},
                     {'args': ['self'], 'defaults': [], 'name': 'Open'},
                     {'args': ['self'], 'defaults': [], 'name': 'RefreshRankingList'},
                     {'args': ['self', 'is_close_lock'], 'defaults': [], 'name': 'SetCloseLock'},
                     {'args': ['self', 'is_tab_lock'], 'defaults': [], 'name': 'SetTabLock'},
                     {'args': ['self'], 'defaults': [], 'name': 'Show'},
                     {'args': ['self', 'window_type'], 'defaults': [], 'name': '__ChangeWindow'},
                     {'args': ['self', 'window_type'], 'defaults': [], 'name': '__ClickTab'},
                     {'args': ['self', 'type', 'data'], 'defaults': [], 'name': '__GameProcess'},
                     {'args': ['self'], 'defaults': [], 'name': '__IsPossibleBehavior'},
                     {'args': ['self'], 'defaults': [], 'name': '__LoadWindow'},
                     {'args': ['self', 'window_type'], 'defaults': [], 'name': '__OverInTab'},
                     {'args': ['self'], 'defaults': [], 'name': '__OverOutTab'},
                     {'args': ['self', 'type', 'data'], 'defaults': [], 'name': '__RewardProcess'},
                     {'args': ['self', 'window_type'], 'defaults': [], 'name': '__SetTabImage'},
                     {'args': ['self', 'window_type'], 'defaults': [], 'name': '__SetWindow'},
                     {'args': ['self'], 'defaults': [], 'name': '__del__'},
                     {'args': ['self'], 'defaults': [], 'name': '__init__'}],
            'import': [],
            'var': [{'name': 'CHALLENGE_MIN_LEVEL', 'type': 'int', 'value': 30},
                    {'name': 'ITEM_VNUM_CHALLENGE_EXP_INCREASE', 'type': 'int', 'value': 70320},
                    {'name': 'ITEM_VNUM_CHALLENGE_WAITING_TIME_DELETE', 'type': 'int', 'value': 70317},
                    {'name': 'IsMiniGameChallengeEventEnd', 'type': 'classmethod', 'value': <classmethod object at 0x08B7C1B0>},
                    {'name': 'IsUseItemMiniGameChallengeExpIncrease', 'type': 'classmethod', 'value': <classmethod object at 0x08B7C1F0>},
                    {'name': 'IsUseItemMiniGameChallengeWaitingTimeDelete', 'type': 'classmethod', 'value': <classmethod object at 0x08B7C1D0>},
                    {'name': 'WAITING_TIME_DELETE_ITEM_LIMIT_TIME_SECOND', 'type': 'int', 'value': 3600},
                    {'name': '_MiniGameChallenge__WINDOW_TYPE_DESC', 'type': 'int', 'value': 1},
                    {'name': '_MiniGameChallenge__WINDOW_TYPE_NONE', 'type': 'int', 'value': 0},
                    {'name': '_MiniGameChallenge__WINDOW_TYPE_PLAY', 'type': 'int', 'value': 2},
                    {'name': '_MiniGameChallenge__WINDOW_TYPE_RANK', 'type': 'int', 'value': 4},
                    {'name': '_MiniGameChallenge__WINDOW_TYPE_REWARD', 'type': 'int', 'value': 3},
                    {'name': '_MiniGameChallenge__board_area_window', 'type': 'member_descriptor', 'value': <member '_MiniGameChallenge__board_area_window' of 'MiniGameChallenge' objects>},
                    {'name': '_MiniGameChallenge__cur_window_object', 'type': 'member_descriptor', 'value': <member '_MiniGameChallenge__cur_window_object' of 'MiniGameChallenge' objects>},
                    {'name': '_MiniGameChallenge__is_close_lock', 'type': 'member_descriptor', 'value': <member '_MiniGameChallenge__is_close_lock' of 'MiniGameChallenge' objects>},
                    {'name': '_MiniGameChallenge__is_loaded', 'type': 'member_descriptor', 'value': <member '_MiniGameChallenge__is_loaded' of 'MiniGameChallenge' objects>},
                    {'name': '_MiniGameChallenge__is_requesting_change_window', 'type': 'member_descriptor', 'value': <member '_MiniGameChallenge__is_requesting_change_window' of 'MiniGameChallenge' objects>},
                    {'name': '_MiniGameChallenge__is_requesting_open', 'type': 'member_descriptor', 'value': <member '_MiniGameChallenge__is_requesting_open' of 'MiniGameChallenge' objects>},
                    {'name': '_MiniGameChallenge__is_tab_lock', 'type': 'member_descriptor', 'value': <member '_MiniGameChallenge__is_tab_lock' of 'MiniGameChallenge' objects>},
                    {'name': '_MiniGameChallenge__sub_window_dict', 'type': 'member_descriptor', 'value': <member '_MiniGameChallenge__sub_window_dict' of 'MiniGameChallenge' objects>},
                    {'name': '_MiniGameChallenge__tab_img_dict', 'type': 'member_descriptor', 'value': <member '_MiniGameChallenge__tab_img_dict' of 'MiniGameChallenge' objects>},
                    {'name': '_MiniGameChallenge__tooltip', 'type': 'member_descriptor', 'value': <member '_MiniGameChallenge__tooltip' of 'MiniGameChallenge' objects>},
                    {'name': '_MiniGameChallenge__tooltip_loca_dict__cur_window_type', 'type': 'member_descriptor', 'value': <member '_MiniGameChallenge__tooltip_loca_dict__cur_window_type' of 'MiniGameChallenge' objects>},
                    {'name': '__doc__', 'type': 'NoneType', 'value': None},
                    {'name': '__module__', 'type': 'str', 'value': 'uiMiniGameChallenge'},
                    {'name': '__qualname__', 'type': 'str', 'value': 'MiniGameChallenge'},
                    {'name': '__slots__', 'type': 'tuple', 'value': ('__is_loaded', '__board_area_window', '__sub_window_dict', '__tab_img_dict', '__tooltip_loca_dict__cur_window_type', '__cur_window_object', '__tooltip', '__is_requesting_open', '__is_requesting_change_window', '__is_tab_lock', '__is_close_lock')}]},
           {'class': [{'class': [],
                       'func': [{'args': ['self'], 'defaults': [], 'name': 'GetLevel'},
                                {'args': ['self'], 'defaults': [], 'name': 'HideCover'},
                                {'args': ['self'], 'defaults': [], 'name': 'OnUpdate'},
                                {'args': ['self', 'challenge_level', 'acquired_reward_level', 'next_reward_level'], 'defaults': [], 'name': 'RefreshCommonRewardButton'},
                                {'args': ['self', 'challenge_level', 'acquired_reward_level', 'next_reward_level'], 'defaults': [], 'name': 'RefreshPremiumRewardButton'},
                                {'args': ['self', 'wait_time'], 'defaults': [], 'name': 'SetWaitTime'},
                                {'args': ['self'], 'defaults': [], 'name': 'ShowCover'},
                                {'args': ['self'], 'defaults': [], 'name': '__ClickCommonButton'},
                                {'args': ['self'], 'defaults': [], 'name': '__ClickPremiumButton'},
                                {'args': ['self', 'slot_index'], 'defaults': [], 'name': '__OverInCommonSlot'},
                                {'args': ['self'], 'defaults': [], 'name': '__OverOutSlot'},
                                {'args': ['self', 'slot_index'], 'defaults': [], 'name': '__OverPremiumSlot'},
                                {'args': ['self'], 'defaults': [], 'name': '__del__'},
                                {'args': ['self', 'sub_window_reward', 'parent_object', 'tooltip_item', 'x', 'y', 'data'], 'defaults': [], 'name': '__init__'}],
                       'import': [],
                       'var': [{'name': '_RewardContents__IMG_PATH', 'type': 'str', 'value': 'd:/ymir work/ui/minigame/challenge/'},
                               {'name': '_RewardContents__REWARD_BUTTON_TEXT_COLOR', 'type': 'long', 'value': 4292002989L},
                               {'name': '_RewardContents__REWARD_SLOT_INDEX_COMMON', 'type': 'int', 'value': 0},
                               {'name': '_RewardContents__REWARD_SLOT_INDEX_PREMIUM1', 'type': 'int', 'value': 0},
                               {'name': '_RewardContents__REWARD_SLOT_INDEX_PREMIUM2', 'type': 'int', 'value': 1},
                               {'name': '_RewardContents__base_img_object', 'type': 'member_descriptor', 'value': <member '_RewardContents__base_img_object' of 'RewardContents' objects>},
                               {'name': '_RewardContents__children_objects', 'type': 'member_descriptor', 'value': <member '_RewardContents__children_objects' of 'RewardContents' objects>},
                               {'name': '_RewardContents__common_button', 'type': 'member_descriptor', 'value': <member '_RewardContents__common_button' of 'RewardContents' objects>},
                               {'name': '_RewardContents__common_count', 'type': 'member_descriptor', 'value': <member '_RewardContents__common_count' of 'RewardContents' objects>},
                               {'name': '_RewardContents__common_vnum', 'type': 'member_descriptor', 'value': <member '_RewardContents__common_vnum' of 'RewardContents' objects>},
                               {'name': '_RewardContents__cover_bg', 'type': 'member_descriptor', 'value': <member '_RewardContents__cover_bg' of 'RewardContents' objects>},
                               {'name': '_RewardContents__level', 'type': 'member_descriptor', 'value': <member '_RewardContents__level' of 'RewardContents' objects>},
                               {'name': '_RewardContents__level_text', 'type': 'member_descriptor', 'value': <member '_RewardContents__level_text' of 'RewardContents' objects>},
                               {'name': '_RewardContents__premium_button', 'type': 'member_descriptor', 'value': <member '_RewardContents__premium_button' of 'RewardContents' objects>},
                               {'name': '_RewardContents__premium_count1', 'type': 'member_descriptor', 'value': <member '_RewardContents__premium_count1' of 'RewardContents' objects>},
                               {'name': '_RewardContents__premium_count2', 'type': 'member_descriptor', 'value': <member '_RewardContents__premium_count2' of 'RewardContents' objects>},
                               {'name': '_RewardContents__premium_vnum1', 'type': 'member_descriptor', 'value': <member '_RewardContents__premium_vnum1' of 'RewardContents' objects>},
                               {'name': '_RewardContents__premium_vnum2', 'type': 'member_descriptor', 'value': <member '_RewardContents__premium_vnum2' of 'RewardContents' objects>},
                               {'name': '_RewardContents__reward_slot_common', 'type': 'member_descriptor', 'value': <member '_RewardContents__reward_slot_common' of 'RewardContents' objects>},
                               {'name': '_RewardContents__reward_slot_premium', 'type': 'member_descriptor', 'value': <member '_RewardContents__reward_slot_premium' of 'RewardContents' objects>},
                               {'name': '_RewardContents__sub_window_reward', 'type': 'member_descriptor', 'value': <member '_RewardContents__sub_window_reward' of 'RewardContents' objects>},
                               {'name': '_RewardContents__tooltip_item', 'type': 'member_descriptor', 'value': <member '_RewardContents__tooltip_item' of 'RewardContents' objects>},
                               {'name': '_RewardContents__wait_time', 'type': 'member_descriptor', 'value': <member '_RewardContents__wait_time' of 'RewardContents' objects>},
                               {'name': '_RewardContents__waiting_time_text_object', 'type': 'member_descriptor', 'value': <member '_RewardContents__waiting_time_text_object' of 'RewardContents' objects>},
                               {'name': '_RewardContents__x', 'type': 'member_descriptor', 'value': <member '_RewardContents__x' of 'RewardContents' objects>},
                               {'name': '_RewardContents__y', 'type': 'member_descriptor', 'value': <member '_RewardContents__y' of 'RewardContents' objects>},
                               {'name': '__doc__', 'type': 'NoneType', 'value': None},
                               {'name': '__module__', 'type': 'str', 'value': 'uiMiniGameChallenge'},
                               {'name': '__qualname__', 'type': 'str', 'value': 'MiniGameChallengeSubWindowReward.RewardContents'},
                               {'name': '__slots__',
                                'type': 'tuple',
                                'value': ('__sub_window_reward',
                                          '__children_objects',
                                          '__tooltip_item',
                                          '__base_img_object',
                                          '__level_text',
                                          '__reward_slot_common',
                                          '__reward_slot_premium',
                                          '__common_button',
                                          '__premium_button',
                                          '__cover_bg',
                                          '__waiting_time_text_object',
                                          '__x',
                                          '__y',
                                          '__level',
                                          '__common_vnum',
                                          '__common_count',
                                          '__premium_vnum1',
                                          '__premium_count1',
                                          '__premium_vnum2',
                                          '__premium_count2',
                                          '__wait_time')}]}],
            'func': [{'args': ['self'], 'defaults': [], 'name': 'Close'},
                     {'args': ['self'], 'defaults': [], 'name': 'Destroy'},
                     {'args': ['self'], 'defaults': [], 'name': 'OnMouseWheelButtonDown'},
                     {'args': ['self'], 'defaults': [], 'name': 'OnMouseWheelButtonUp'},
                     {'args': ['self'], 'defaults': [], 'name': 'OnUpdate'},
                     {'args': ['self', 'type', 'reward_contents_level'], 'defaults': [], 'name': 'RequestGetReward'},
                     {'args': ['self', 'type', 'data'], 'defaults': [], 'name': 'RewardProcess'},
                     {'args': ['self'], 'defaults': [], 'name': 'Show'},
                     {'args': ['self'], 'defaults': [], 'name': '__CriticalEffectEndFrame'},
                     {'args': ['self', 'level', 'number'], 'defaults': [], 'name': '__GetExpNormalizationData'},
                     {'args': ['self', 'value', 'min', 'max'], 'defaults': [], 'name': '__GetMinMaxScaling'},
                     {'args': ['self', 'level'], 'defaults': [], 'name': '__GetNextRewardTableLevel'},
                     {'args': ['self', 'lower_group_name', 'lower_source_text'], 'defaults': [], 'name': '__GetTextLinesFromGroupUseFind'},
                     {'args': ['self', 'group_name', 'source_text'], 'defaults': [], 'name': '__GetTextLinesFromGroupUseRegex'},
                     {'args': ['self'], 'defaults': [], 'name': '__LoadDataFile'},
                     {'args': ['self'], 'defaults': [], 'name': '__LoadWindow'},
                     {'args': ['self'], 'defaults': [], 'name': '__RefreshRewardButton'},
                     {'args': ['self'], 'defaults': [], 'name': '__RefreshRewardList'},
                     {'args': ['self', 'challenge_exp'], 'defaults': [], 'name': '__SetChallengeExp'},
                     {'args': ['self', 'challenge_info_tuple'], 'defaults': [], 'name': '__SetChallengeInfo'},
                     {'args': ['self', 'cover_level', 'cover_wait_time'], 'defaults': [], 'name': '__SetCoverData'},
                     {'args': ['self'], 'defaults': [], 'name': '__SetCycleEndTime'},
                     {'args': ['self', 'type', 'data'], 'defaults': [], 'name': '__SetEvent'},
                     {'args': ['self', 'challenge_level'], 'defaults': [], 'name': '__SetLevel'},
                     {'args': ['self', 'acquired_common_reward_level', 'acquired_premium_reward_level'], 'defaults': [], 'name': '__SetRewardAcquiredLevel'},
                     {'args': ['self', 'exp'], 'defaults': [], 'name': '__SetUseExp'},
                     {'args': ['self', 'cur_gauge', 'max_gauge'], 'defaults': [], 'name': '__SetUseExpGauge'},
                     {'args': ['self'], 'defaults': [], 'name': '__UpdateCover'},
                     {'args': ['self'], 'defaults': [], 'name': '__UpdateEvent'},
                     {'args': ['self'], 'defaults': [], 'name': '__UseExpButton'},
                     {'args': ['self'], 'defaults': [], 'name': '__del__'},
                     {'args': ['self', 'control_window', 'parent_window'], 'defaults': [], 'name': '__init__'}],
            'import': [],
            'var': [{'name': 'REWARD_CONTENTS_UI_HEIGHT', 'type': 'int', 'value': 68},
                    {'name': 'REWARD_CONTENTS_UI_HEIGHT_GAP', 'type': 'int', 'value': 3},
                    {'name': 'REWARD_CONTENTS_UI_WIDTH', 'type': 'int', 'value': 289},
                    {'name': 'REWARD_TYPE_COMMON', 'type': 'int', 'value': 0},
                    {'name': 'REWARD_TYPE_PREMIUM', 'type': 'int', 'value': 1},
                    {'name': '_MiniGameChallengeSubWindowReward__CHALLENGE_GET_REWARD_LIMIT_TIME_SECOND', 'type': 'int', 'value': 300},
                    {'name': '_MiniGameChallengeSubWindowReward__CHALLENGE_INFO_TUPLE_SIZE', 'type': 'int', 'value': 3},
                    {'name': '_MiniGameChallengeSubWindowReward__CHALLENGE_USE_EXP_LIMIT_TIME_SECOND', 'type': 'int', 'value': 3600},
                    {'name': '_MiniGameChallengeSubWindowReward__DEFAULT_COVER_WAIT_TIME_SECOND', 'type': 'int', 'value': 7200},
                    {'name': '_MiniGameChallengeSubWindowReward__EVENT_DEQUE_DATA_SIZE', 'type': 'int', 'value': 2},
                    {'name': '_MiniGameChallengeSubWindowReward__EVENT_TYPE_CONTORL_WINDOW_LOCK', 'type': 'int', 'value': 9},
                    {'name': '_MiniGameChallengeSubWindowReward__EVENT_TYPE_DELAY', 'type': 'int', 'value': 1},
                    {'name': '_MiniGameChallengeSubWindowReward__EVENT_TYPE_EXP_GAUGE', 'type': 'int', 'value': 4},
                    {'name': '_MiniGameChallengeSubWindowReward__EVENT_TYPE_INSERT_DELAY', 'type': 'int', 'value': 0},
                    {'name': '_MiniGameChallengeSubWindowReward__EVENT_TYPE_LEVEL_BG_HIGHLIGHT', 'type': 'int', 'value': 7},
                    {'name': '_MiniGameChallengeSubWindowReward__EVENT_TYPE_SET_CHALLENGE_EXP', 'type': 'int', 'value': 3},
                    {'name': '_MiniGameChallengeSubWindowReward__EVENT_TYPE_SET_EXP_DATA', 'type': 'int', 'value': 5},
                    {'name': '_MiniGameChallengeSubWindowReward__EVENT_TYPE_SET_IS_PLAYING_EFFECT', 'type': 'int', 'value': 8},
                    {'name': '_MiniGameChallengeSubWindowReward__EVENT_TYPE_SET_LEVEL', 'type': 'int', 'value': 2},
                    {'name': '_MiniGameChallengeSubWindowReward__EVENT_TYPE_SHOW_CRITICAL_EFFECT', 'type': 'int', 'value': 6},
                    {'name': '_MiniGameChallengeSubWindowReward__EVENT_TYPE_USE_EXP_BUTTON_ENABLE', 'type': 'int', 'value': 10},
                    {'name': '_MiniGameChallengeSubWindowReward__EXP_GAUGE_SPLIT_COUNT', 'type': 'int', 'value': 20},
                    {'name': '_MiniGameChallengeSubWindowReward__EXP_TABLE_TOKEN_SIZE', 'type': 'int', 'value': 2},
                    {'name': '_MiniGameChallengeSubWindowReward__NORMALIZE_VALUE', 'type': 'int', 'value': 100000},
                    {'name': '_MiniGameChallengeSubWindowReward__REWARD_CONTENTS_VIEW_COUNT', 'type': 'int', 'value': 4},
                    {'name': '_MiniGameChallengeSubWindowReward__REWARD_TABLE_TOKEN_SIZE', 'type': 'int', 'value': 7},
                    {'name': '_MiniGameChallengeSubWindowReward__acquired_common_reward_level', 'type': 'member_descriptor', 'value': <member '_MiniGameChallengeSubWindowReward__acquired_common_reward_level' of 'MiniGameChallengeSubWindowReward' objects>},
                    {'name': '_MiniGameChallengeSubWindowReward__acquired_premium_reward_level', 'type': 'member_descriptor', 'value': <member '_MiniGameChallengeSubWindowReward__acquired_premium_reward_level' of 'MiniGameChallengeSubWindowReward' objects>},
                    {'name': '_MiniGameChallengeSubWindowReward__challenge_exp', 'type': 'member_descriptor', 'value': <member '_MiniGameChallengeSubWindowReward__challenge_exp' of 'MiniGameChallengeSubWindowReward' objects>},
                    {'name': '_MiniGameChallengeSubWindowReward__challenge_exp_text_object', 'type': 'member_descriptor', 'value': <member '_MiniGameChallengeSubWindowReward__challenge_exp_text_object' of 'MiniGameChallengeSubWindowReward' objects>},
                    {'name': '_MiniGameChallengeSubWindowReward__challenge_level', 'type': 'member_descriptor', 'value': <member '_MiniGameChallengeSubWindowReward__challenge_level' of 'MiniGameChallengeSubWindowReward' objects>},
                    {'name': '_MiniGameChallengeSubWindowReward__clock_text_object', 'type': 'member_descriptor', 'value': <member '_MiniGameChallengeSubWindowReward__clock_text_object' of 'MiniGameChallengeSubWindowReward' objects>},
                    {'name': '_MiniGameChallengeSubWindowReward__control_window', 'type': 'member_descriptor', 'value': <member '_MiniGameChallengeSubWindowReward__control_window' of 'MiniGameChallengeSubWindowReward' objects>},
                    {'name': '_MiniGameChallengeSubWindowReward__cover_level', 'type': 'member_descriptor', 'value': <member '_MiniGameChallengeSubWindowReward__cover_level' of 'MiniGameChallengeSubWindowReward' objects>},
                    {'name': '_MiniGameChallengeSubWindowReward__cover_wait_time', 'type': 'member_descriptor', 'value': <member '_MiniGameChallengeSubWindowReward__cover_wait_time' of 'MiniGameChallengeSubWindowReward' objects>},
                    {'name': '_MiniGameChallengeSubWindowReward__critical_effect', 'type': 'member_descriptor', 'value': <member '_MiniGameChallengeSubWindowReward__critical_effect' of 'MiniGameChallengeSubWindowReward' objects>},
                    {'name': '_MiniGameChallengeSubWindowReward__cycle_end_time_desc_area_window', 'type': 'member_descriptor', 'value': <member '_MiniGameChallengeSubWindowReward__cycle_end_time_desc_area_window' of 'MiniGameChallengeSubWindowReward' objects>},
                    {'name': '_MiniGameChallengeSubWindowReward__cycle_end_time_tooltip', 'type': 'member_descriptor', 'value': <member '_MiniGameChallengeSubWindowReward__cycle_end_time_tooltip' of 'MiniGameChallengeSubWindowReward' objects>},
                    {'name': '_MiniGameChallengeSubWindowReward__event_deque', 'type': 'member_descriptor', 'value': <member '_MiniGameChallengeSubWindowReward__event_deque' of 'MiniGameChallengeSubWindowReward' objects>},
                    {'name': '_MiniGameChallengeSubWindowReward__exp_table_dict', 'type': 'member_descriptor', 'value': <member '_MiniGameChallengeSubWindowReward__exp_table_dict' of 'MiniGameChallengeSubWindowReward' objects>},
                    {'name': '_MiniGameChallengeSubWindowReward__exp_table_normalization_dict', 'type': 'member_descriptor', 'value': <member '_MiniGameChallengeSubWindowReward__exp_table_normalization_dict' of 'MiniGameChallengeSubWindowReward' objects>},
                    {'name': '_MiniGameChallengeSubWindowReward__is_loaded', 'type': 'member_descriptor', 'value': <member '_MiniGameChallengeSubWindowReward__is_loaded' of 'MiniGameChallengeSubWindowReward' objects>},
                    {'name': '_MiniGameChallengeSubWindowReward__is_playing_effect', 'type': 'member_descriptor', 'value': <member '_MiniGameChallengeSubWindowReward__is_playing_effect' of 'MiniGameChallengeSubWindowReward' objects>},
                    {'name': '_MiniGameChallengeSubWindowReward__is_requesting_get_reward__is_requesting_use_exp', 'type': 'member_descriptor', 'value': <member '_MiniGameChallengeSubWindowReward__is_requesting_get_reward__is_requesting_use_exp' of 'MiniGameChallengeSubWindowReward' objects>},
                    {'name': '_MiniGameChallengeSubWindowReward__level_text', 'type': 'member_descriptor', 'value': <member '_MiniGameChallengeSubWindowReward__level_text' of 'MiniGameChallengeSubWindowReward' objects>},
                    {'name': '_MiniGameChallengeSubWindowReward__levelup_highlight_img', 'type': 'member_descriptor', 'value': <member '_MiniGameChallengeSubWindowReward__levelup_highlight_img' of 'MiniGameChallengeSubWindowReward' objects>},
                    {'name': '_MiniGameChallengeSubWindowReward__reward_contents_object_tuple', 'type': 'member_descriptor', 'value': <member '_MiniGameChallengeSubWindowReward__reward_contents_object_tuple' of 'MiniGameChallengeSubWindowReward' objects>},
                    {'name': '_MiniGameChallengeSubWindowReward__reward_list_window', 'type': 'member_descriptor', 'value': <member '_MiniGameChallengeSubWindowReward__reward_list_window' of 'MiniGameChallengeSubWindowReward' objects>},
                    {'name': '_MiniGameChallengeSubWindowReward__reward_table_dict', 'type': 'member_descriptor', 'value': <member '_MiniGameChallengeSubWindowReward__reward_table_dict' of 'MiniGameChallengeSubWindowReward' objects>},
                    {'name': '_MiniGameChallengeSubWindowReward__scroll_pos', 'type': 'member_descriptor', 'value': <member '_MiniGameChallengeSubWindowReward__scroll_pos' of 'MiniGameChallengeSubWindowReward' objects>},
                    {'name': '_MiniGameChallengeSubWindowReward__scrollbar', 'type': 'member_descriptor', 'value': <member '_MiniGameChallengeSubWindowReward__scrollbar' of 'MiniGameChallengeSubWindowReward' objects>},
                    {'name': '_MiniGameChallengeSubWindowReward__tooltip_item', 'type': 'member_descriptor', 'value': <member '_MiniGameChallengeSubWindowReward__tooltip_item' of 'MiniGameChallengeSubWindowReward' objects>},
                    {'name': '_MiniGameChallengeSubWindowReward__use_exp', 'type': 'member_descriptor', 'value': <member '_MiniGameChallengeSubWindowReward__use_exp' of 'MiniGameChallengeSubWindowReward' objects>},
                    {'name': '_MiniGameChallengeSubWindowReward__use_exp_button', 'type': 'member_descriptor', 'value': <member '_MiniGameChallengeSubWindowReward__use_exp_button' of 'MiniGameChallengeSubWindowReward' objects>},
                    {'name': '_MiniGameChallengeSubWindowReward__use_exp_gauge_img', 'type': 'member_descriptor', 'value': <member '_MiniGameChallengeSubWindowReward__use_exp_gauge_img' of 'MiniGameChallengeSubWindowReward' objects>},
                    {'name': '_MiniGameChallengeSubWindowReward__use_exp_gauge_text', 'type': 'member_descriptor', 'value': <member '_MiniGameChallengeSubWindowReward__use_exp_gauge_text' of 'MiniGameChallengeSubWindowReward' objects>},
                    {'name': '__doc__', 'type': 'NoneType', 'value': None},
                    {'name': '__module__', 'type': 'str', 'value': 'uiMiniGameChallenge'},
                    {'name': '__qualname__', 'type': 'str', 'value': 'MiniGameChallengeSubWindowReward'},
                    {'name': '__slots__',
                     'type': 'tuple',
                     'value': ('__control_window',
                               '__is_loaded',
                               '__use_exp_gauge_img',
                               '__use_exp_gauge_text',
                               '__reward_contents_object_tuple',
                               '__reward_table_dict',
                               '__exp_table_dict',
                               '__exp_table_normalization_dict',
                               '__scrollbar',
                               '__scroll_pos',
                               '__reward_list_window',
                               '__challenge_exp_text_object',
                               '__use_exp_button',
                               '__critical_effect',
                               '__level_text',
                               '__levelup_highlight_img',
                               '__clock_text_object',
                               '__cycle_end_time_desc_area_window',
                               '__challenge_exp',
                               '__challenge_level',
                               '__use_exp',
                               '__cover_level',
                               '__cover_wait_time',
                               '__acquired_common_reward_level',
                               '__acquired_premium_reward_level',
                               '__event_deque',
                               '__tooltip_item',
                               '__cycle_end_time_tooltip',
                               '__is_requesting_get_reward__is_requesting_use_exp',
                               '__is_playing_effect')}]},
           {'class': [{'class': [],
                       'func': [{'args': ['self'], 'defaults': [], 'name': 'OnRender'}, {'args': ['self', 'index'], 'defaults': [], 'name': 'SetIndex'}, {'args': ['self'], 'defaults': [], 'name': '__del__'}, {'args': ['self'], 'defaults': [], 'name': '__init__'}],
                       'import': [],
                       'var': [{'name': '_DescriptionBox__desc_index', 'type': 'member_descriptor', 'value': <member '_DescriptionBox__desc_index' of 'DescriptionBox' objects>},
                               {'name': '__doc__', 'type': 'NoneType', 'value': None},
                               {'name': '__module__', 'type': 'str', 'value': 'uiMiniGameChallenge'},
                               {'name': '__qualname__', 'type': 'str', 'value': 'MiniGameChallengeSubWindowRank.DescriptionBox'},
                               {'name': '__slots__', 'type': 'tuple', 'value': ('__desc_index',)}]}],
            'func': [{'args': ['self'], 'defaults': [], 'name': 'Close'},
                     {'args': ['self'], 'defaults': [], 'name': 'Destroy'},
                     {'args': ['self'], 'defaults': [], 'name': 'Hide'},
                     {'args': ['self'], 'defaults': [], 'name': 'OnUpdate'},
                     {'args': ['self'], 'defaults': [], 'name': 'RefreshRankingList'},
                     {'args': ['self'], 'defaults': [], 'name': 'Show'},
                     {'args': ['self'], 'defaults': [], 'name': '__LoadWindow'},
                     {'args': ['self'], 'defaults': [], 'name': '__NextDescriptionPage'},
                     {'args': ['self'], 'defaults': [], 'name': '__PrevDescriptionPage'},
                     {'args': ['self'], 'defaults': [], 'name': '__RefreshRankingBoard'},
                     {'args': ['self'], 'defaults': [], 'name': '__del__'},
                     {'args': ['self', 'control_window', 'parent_window'], 'defaults': [], 'name': '__init__'}],
            'import': [],
            'var': [{'name': '_MiniGameChallengeSubWindowRank__DEFAULT_DESC_Y', 'type': 'int', 'value': 7},
                    {'name': '_MiniGameChallengeSubWindowRank__DESC_WIDTH_COUNT', 'type': 'int', 'value': 23},
                    {'name': '_MiniGameChallengeSubWindowRank__MY_RANK_TUPLE_SIZE', 'type': 'int', 'value': 3},
                    {'name': '_MiniGameChallengeSubWindowRank__RANK_SHOW_COUNT', 'type': 'int', 'value': 10},
                    {'name': '_MiniGameChallengeSubWindowRank__RANK_TEXT_OBJECT_SIZE', 'type': 'int', 'value': 2},
                    {'name': '_MiniGameChallengeSubWindowRank__VISIBLE_LINE_COUNT', 'type': 'int', 'value': 16},
                    {'name': '_MiniGameChallengeSubWindowRank__control_window', 'type': 'member_descriptor', 'value': <member '_MiniGameChallengeSubWindowRank__control_window' of 'MiniGameChallengeSubWindowRank' objects>},
                    {'name': '_MiniGameChallengeSubWindowRank__desc_board', 'type': 'member_descriptor', 'value': <member '_MiniGameChallengeSubWindowRank__desc_board' of 'MiniGameChallengeSubWindowRank' objects>},
                    {'name': '_MiniGameChallengeSubWindowRank__desc_index', 'type': 'member_descriptor', 'value': <member '_MiniGameChallengeSubWindowRank__desc_index' of 'MiniGameChallengeSubWindowRank' objects>},
                    {'name': '_MiniGameChallengeSubWindowRank__desc_y', 'type': 'member_descriptor', 'value': <member '_MiniGameChallengeSubWindowRank__desc_y' of 'MiniGameChallengeSubWindowRank' objects>},
                    {'name': '_MiniGameChallengeSubWindowRank__description_box', 'type': 'member_descriptor', 'value': <member '_MiniGameChallengeSubWindowRank__description_box' of 'MiniGameChallengeSubWindowRank' objects>},
                    {'name': '_MiniGameChallengeSubWindowRank__is_loaded', 'type': 'member_descriptor', 'value': <member '_MiniGameChallengeSubWindowRank__is_loaded' of 'MiniGameChallengeSubWindowRank' objects>},
                    {'name': '_MiniGameChallengeSubWindowRank__is_loaded_data', 'type': 'member_descriptor', 'value': <member '_MiniGameChallengeSubWindowRank__is_loaded_data' of 'MiniGameChallengeSubWindowRank' objects>},
                    {'name': '_MiniGameChallengeSubWindowRank__my_rank_text_object_tuple', 'type': 'member_descriptor', 'value': <member '_MiniGameChallengeSubWindowRank__my_rank_text_object_tuple' of 'MiniGameChallengeSubWindowRank' objects>},
                    {'name': '_MiniGameChallengeSubWindowRank__rank_text_object_tuple', 'type': 'member_descriptor', 'value': <member '_MiniGameChallengeSubWindowRank__rank_text_object_tuple' of 'MiniGameChallengeSubWindowRank' objects>},
                    {'name': '__doc__', 'type': 'NoneType', 'value': None},
                    {'name': '__module__', 'type': 'str', 'value': 'uiMiniGameChallenge'},
                    {'name': '__qualname__', 'type': 'str', 'value': 'MiniGameChallengeSubWindowRank'},
                    {'name': '__slots__', 'type': 'tuple', 'value': ('__control_window', '__is_loaded', '__desc_board', '__description_box', '__desc_index', '__desc_y', '__rank_text_object_tuple', '__my_rank_text_object_tuple', '__is_loaded_data')}]}],
 'func': [{'args': ['bad-module'], 'defaults': ['bad-module'], 'name': 'proxy'}, {'args': ['wrapped', 'assigned', 'updated'], 'defaults': [('__module__', '__name__', '__doc__'), ('__dict__',)], 'name': 'wraps'}],
 'import': ['ranking', 'chatm2g', 'app', 'm2netm2g', 'playerm2g2', 'event', 'uiToolTip', 're', 'chr', 'uiScriptLocale', 'localeInfo', 'math', 'uiCommon', '__builtin__', 'wndMgr', 'ui'],
 'var': [{'name': '__doc__', 'type': 'NoneType', 'value': None}, {'name': '__name__', 'type': 'str', 'value': 'uiMiniGameChallenge'}, {'name': '__package__', 'type': 'NoneType', 'value': None}, {'name': '__test__', 'type': 'dict', 'value': {}}]}
